volumes:
  db-volume:
services:
  browser:
    build:
      context: ${CLIENT_BROWSER_PATH}
      dockerfile: Dockerfile
    ports:
      - target: 5173
        published: 5173
        host_ip: 127.0.0.1 # ensures that port isn't exposed from host machine as well
    develop:
      watch:
        - path: ${CLIENT_BROWSER_PATH}/src
          target: /app/src
          action: sync
        - path: ${CLIENT_BROWSER_PATH}/public
          target: /app/public
          action: sync
        - path: ${CLIENT_BROWSER_PATH}/index.html
          target: /app/index.html
          action: sync
        - path: ${CLIENT_BROWSER_PATH}/tsconfig.json
          target: /app/tsconfig.json
          action: sync
        - path: ${CLIENT_BROWSER_PATH}/tsconfig.node.json
          target: /app/tsconfig.node.json
          action: sync
        - path: ${CLIENT_BROWSER_PATH}/vite.config.ts
          target: /app/vite.config.ts
          action: sync
        - path: ${CLIENT_BROWSER_PATH}/Dockerfile
          action: rebuild
        - path: ${CLIENT_BROWSER_PATH}/package.json
          action: rebuild
        - path: ${CLIENT_BROWSER_PATH}/yarn.lock
          action: rebuild
  db:
    image: postgres:16.2-alpine3.19
    ports:
      - target: 5432
        published: 5434
        host_ip: 127.0.0.1
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: bank
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        target: /var/lib/postgresql/data
        source: db-volume
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
